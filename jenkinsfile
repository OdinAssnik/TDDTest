@Library("shared-libraries")
import io.libs.SqlUtils
import io.libs.ProjectHelpers
import io.libs.Utils

def utils = new Utils()
def projectHelpers = new ProjectHelpers()

pipeline {

    parameters {
        string(defaultValue: "${env.jenkinsAgent}", description: 'Нода дженкинса, на которой запускать пайплайн. По умолчанию ___________', name: 'jenkinsAgent')
        string(defaultValue: "${env.v8version}", description: 'Версия платформы 1с, например 8.3.12.1685. По умолчанию будет использована последня версия среди установленных', name: 'v8version')
        string(defaultValue: "${env.ibConnection}", description: 'Путь подключения к базе 1с', name: 'ibConnection')
        string(defaultValue: "${env.ibUser}", description: 'Имя администратора с правом открытия вншних обработок (!) для базы тестирования 1с Должен быть одинаковым для всех баз',name: 'ibUser')
        string(defaultValue: "${env.ibPassword}", description: 'Пароль администратора базы тестирования 1C.', name: 'ibPassword') 
        string(defaultValue: "${env.storage1cPath}", description: 'Путь к хранилищу 1С для обновления копий базы тестирования. Например D:/temp/storage1c/erp,D:/temp/storage1c/upp', name: 'storage1cPath')
        string(defaultValue: "${env.storageUser}", description: 'Имя пользователя хранилища', name: 'storageUser')
        string(defaultValue: "${env.storagePassword}", description: 'Пароль пользователя хранилища', name: 'storagePassword')
    }

    agent { 
        label "${(env.jenkinsAgent == null || env.jenkinsAgent == 'null') ? "test" : env.jenkinsAgent}"
    }

    stages {
        stage("Запуск"){
            steps{

                @bat "chcp 65001\n vrunner loadrepo --storage-name ""C:/Users/Адрей/OneDrive/Рабочий стол/МОЯ ВАНЕССА/хранилище"" --storage-user ""Администратор"" --storage-pwd ""123456"" --ibconnection ""/FC:/Users/Адрей/OneDrive/Документы/1C/Platform8Demo1"" --db-user ""Администратор"" --db-pwd ""123456"""
             //   updateDbTask(v8version, storage1cPath, storageUser, storagePassword, ibConnection, ibUser, ibPassword)
            }
      }
    }
}


def updateDbTask(v8version, storage1cPath, storageUser, storagePassword, ibConnection, ibUser, ibPassword) {
//def updateDbTask(v8version, storage1cPath, storageUser, storagePassword, ibConnection) {
    return {
        stage("Загрузка из хранилища") {
            stage("Загрузка из хранилища") {
                //timestamps {
                    prHelpers = new ProjectHelpers()

                //if (storage1cPath == null || storage1cPath.isEmpty()) {
                //    return
                //}

                //prHelpers.updateInfobase(connString, admin1cUser, admin1cPwd, platform1c)

                prHelpers.loadCfgFrom1CStorage(v8version, storage1cPath, storageUser, storagePassword, ibConnection, ibUser, ibPassword)
                prHelpers.updateInfobase(v8version, ibConnection, ibUser, ibPassword)

                //}            
            }        
        }
    }
}